spring.application.name=mmr


spring.datasource.url=jdbc:mysql://gateway01.ap-southeast-1.prod.aws.tidbcloud.com:4000/dbmemoire?useSSL=true&enabledTLSProtocols=TLSv1.2&requireSSL=true&verifyServerCertificate=true&connectTimeout=5000&socketTimeout=30000
spring.datasource.tomcat.ssl-root-cert=classpath:isrgrootx1.pem
spring.datasource.username=3ZST3QyiQ3FEaXE.root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=true


# Logging and Debugging
logging.level.root=INFO
logging.level.com.yourapp=DEBUG
logging.level.org.springframework.security=INFO

logging.file.name=application.log
logging.file.max-size=10MB
logging.file.max-history=10

# Log pattern configuration
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Multipart for File uploads configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=500MB
spring.servlet.multipart.max-request-size=500MB
file.upload-dir=D:/Online Class/College/Uploads


# Cache configuration
spring.cache.cache-names=publicProfiles,ownProfiles,userProfiles,userAuthentication,capsuleContents,contentMetadata,reports,reportedEntities
spring.cache.caffeine.spec=maximumSize=500,expireAfterAccess=600s

server.error.include-stacktrace=never
spring.main.allow-bean-definition-overriding=true

spring.security.oauth2.client.registration.google.client-id=500063994752-5graisegq8sp2t5mfkai2lm9a48k0kb8.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=
spring.security.oauth2.client.registration.google.scope=https://www.googleapis.com/auth/userinfo.profile,https://www.googleapis.com/auth/userinfo.email


spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email

jwt.secret=bXlTZWNyZXRLZXkxMjM0NTY3ODkwYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXo=
jwt.expiration=86400000


firebase.credentials.path=firebase-service-account.json

spring.websocket.proxy.host=true
spring.websocket.proxy.destination=true
server.forward-headers-strategy=NATIVE
management.endpoints.web.base-path=/actuator
server.servlet.context-path=/
server.port=8080
management.server.port=8080

management.endpoints.web.exposure.include=health,info

# Database optimizationy
#spring.datasource.hikari.connection-timeout=30000
#spring.datasource.hikari.maximum-pool-size=5
#spring.datasource.hikari.minimum-idle=1
#spring.datasource.hikari.idle-timeout=30000
#spring.datasource.hikari.max-lifetime=1800000

# Startup optimization
spring.main.lazy-initialization=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.open-in-view=false

# Health check settings
#management.endpoint.health.probes.enabled=true
#management.health.db.timeout=10s
#management.health.diskspace.timeout=5s

## WebSocket optimization
#server.tomcat.max-threads=200
#server.tomcat.accept-count=100

# WebSocket buffer sizes
spring.websocket.send-buffer-size-limit=52428800
management.endpoint.health.show-details=never
management.health.db.enabled=false
management.health.diskspace.enabled=false
